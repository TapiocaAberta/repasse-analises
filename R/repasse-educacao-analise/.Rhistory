115/10
115/11
115/12
115/13
115/14
115/15
115/16
115/17
115/18
115/19
115/20
115/21
115/22
115/23
X <- matrix(x, nrow = 23)
Y <- matrix(y, nrow = 23)
View(X)
Yscaled <- (Y - min(Y)) / (max(Y) - min(Y))
Xscaled <- (X - min(X)) / (max(X) - min(X))
Y <- Yscaled
X <- Xscaled
View(X)
View(X)
train=1:3
test=4:5
set.seed(13)
model <- trainr(Y = Y[,train],
X = X[,train],
learningrate = 0.05,
hidden_dim = 20,
numepochs = 1000,
network_type = "lstm"
)
#no conjunto de treinamento
Ytrain <- t(matrix(predictr(model, X[,train]),nrow=1))
Yreal <- t(matrix(Y[,train],nrow=1))
#Percentual de variação em uma variável explicada por outra
rsq <- function(y_actual,y_predict){
cor(y_actual,y_predict)^2
}
rsq(Yreal,Ytrain)
plot(Ytrain, type = "l", col = "darkred")
lines(Yreal, col = "darkblue", type = "l")
#no conjunto de teste
Ytest=matrix(Y[,test], nrow = 1)
Ytest = t(Ytest)
Yp <- predictr(model, Y[,test])
Ypredicted=matrix(Yp, nrow = 1)
Ypredicted=t(Ypredicted)
result_data <- data.frame(Ytest)
result_data$Ypredicted <- Ypredicted
rsq(result_data$Ytest,result_data$Ypredicted)
mean(result_data$Ytest)
mean(result_data$Ypredicted)
View(result_data)
model$error
?model$error
plot(colMeans(model$error),type='l',xlab='epoch',ylab='errors')
plot(as.vector(t(result_data$Ytest)), col = 'red', type='l',
main = "Actual vs Predicted Humidity: testing set",
ylab = "Y,Yp")
lines(as.vector(t(Yp)), type = 'l', col = 'black')
legend("bottomright", c("Predicted", "Actual"),
col = c("red","black"),
lty = c(1,1), lwd = c(1,1))
set.seed(13)
model <- trainr(Y = Y[,train],
X = X[,train],
learningrate = 0.05,
hidden_dim = 200,
numepochs = 1000,
network_type = "lstm"
)
#no conjunto de treinamento
Ytrain <- t(matrix(predictr(model, X[,train]),nrow=1))
Yreal <- t(matrix(Y[,train],nrow=1))
#Percentual de variação em uma variável explicada por outra
rsq <- function(y_actual,y_predict){
cor(y_actual,y_predict)^2
}
rsq(Yreal,Ytrain)
plot(Ytrain, type = "l", col = "darkred")
lines(Yreal, col = "darkblue", type = "l")
#no conjunto de teste
Ytest=matrix(Y[,test], nrow = 1)
Ytest = t(Ytest)
Yp <- predictr(model, Y[,test])
Ypredicted=matrix(Yp, nrow = 1)
Ypredicted=t(Ypredicted)
result_data <- data.frame(Ytest)
result_data$Ypredicted <- Ypredicted
rsq(result_data$Ytest,result_data$Ypredicted)
mean(result_data$Ytest)
mean(result_data$Ypredicted)
plot(colMeans(model$error),type='l',xlab='epoch',ylab='errors')
rsq(result_data$Ytest,result_data$Ypredicted)
hd_200 <- rsq(result_data$Ytest,result_data$Ypredicted)
ep_1000_hd_200 <- rsq(result_data$Ytest,result_data$Ypredicted)
remove(hd_200)
model <- trainr(Y = Y[,train],
X = X[,train],
learningrate = 0.05,
hidden_dim = 200,
numepochs = 10000,
network_type = "lstm"
)
#no conjunto de treinamento
Ytrain <- t(matrix(predictr(model, X[,train]),nrow=1))
Yreal <- t(matrix(Y[,train],nrow=1))
#Percentual de variação em uma variável explicada por outra
rsq <- function(y_actual,y_predict){
cor(y_actual,y_predict)^2
}
rsq(Yreal,Ytrain)
plot(Ytrain, type = "l", col = "darkred")
lines(Yreal, col = "darkblue", type = "l")
#no conjunto de teste
Ytest=matrix(Y[,test], nrow = 1)
Ytest = t(Ytest)
Yp <- predictr(model, Y[,test])
Ypredicted=matrix(Yp, nrow = 1)
Ypredicted=t(Ypredicted)
result_data <- data.frame(Ytest)
result_data$Ypredicted <- Ypredicted
ep_10000_hd_200 <- rsq(result_data$Ytest,result_data$Ypredicted)
mean(result_data$Ytest)
mean(result_data$Ypredicted)
plot(colMeans(model$error),type='l',xlab='epoch',ylab='errors')
ep_1000_hd_200
ep_10000_hd_200
View(result_data)
View(result_data)
View(Ytest)
scale(10)
scale(100)
scale(12312434)
teste = 100
teste <- c(10, 20, 30, 40)
scale(test)
scale(test, scale = mean(test))
scaled <- scale(test, scale = mean(test))
scaled
scaled <- data.frame(scale(test, scale = mean(test)))
scaled
scaled <- data.frame(scale(teste, scale = mean(test)))
scaled
?scale
apply(teste, 2, max)
teste <- c(10, 20, 30, 40)
apply(teste, 2, max)
s.x <- scale(teste)
s.x
s.x * attr(s.x, 'scaled:scale') + attr(s.x, 'scaled:center')
t1 <- s.x * attr(s.x, 'scaled:scale') + attr(s.x, 'scaled:center')
t1
t1[1]
library("rnn")
library("dplyr")
library("ggplot2")
library("viridis")
library("plotly")
library(corrplot)
library("PerformanceAnalytics")
repasseAno <- read.csv(file = "../../data/repasse_ano.csv")
repasseAno$DATA <- as.Date(repasseAno$DATA);
repasseAno <- na.omit(repasseAno)
repasseAno <-repasseAno[order(repasseAno$DATA, decreasing = TRUE),]
repasse <- repasseAno$VALOR
repasse_anterior <- lead(repasse,n=1L)
data_analise <- data.frame(repasse)
data_analise$repasse_anterior <- repasse_anterior
#exclui NA
data_analise <- na.omit(data_analise)
x <- data_analise[,2]
y <- data_analise[,1]
X <- matrix(x, nrow = 23)
Y <- matrix(y, nrow = 23)
Yscaled <- scale(Y)
Xscaled <- scale(X)
Y <- Yscaled
X <- Xscaled
train=1:3
test=4:5
set.seed(13)
model <- trainr(Y = Y[,train],
X = X[,train],
learningrate = 0.05,
hidden_dim = 20,
numepochs = 1000,
network_type = "lstm"
)
#no conjunto de treinamento
Ytrain <- t(matrix(predictr(model, X[,train]),nrow=1))
Yreal <- t(matrix(Y[,train],nrow=1))
#Percentual de variação em uma variável explicada por outra
rsq <- function(y_actual,y_predict){
cor(y_actual,y_predict)^2
}
rsq(Yreal,Ytrain)
plot(Ytrain, type = "l", col = "darkred")
lines(Yreal, col = "darkblue", type = "l")
#no conjunto de teste
Ytest=matrix(Y[,test], nrow = 1)
Ytest = t(Ytest)
Yp <- predictr(model, Y[,test])
Ypredicted=matrix(Yp, nrow = 1)
Ypredicted=t(Ypredicted)
result_data <- data.frame(Ytest)
result_data$Ypredicted <- Ypredicted
ep_1000_hd_20 <- rsq(result_data$Ytest,result_data$Ypredicted)
ep_1000_hd_20
Ytest
Yscaled
Ytest_real <- Ytest * attr(Yscaled, 'scaled:scale') + attr(Yscaled, 'scaled:center')
Ytest_real <- Yscaled * attr(Yscaled, 'scaled:scale') + attr(Yscaled, 'scaled:center')
View(Yreal)
Yscaled * attr(Yscaled, 'scaled:scale') + attr(Yscaled, 'scaled:center')
library("rnn")
library("dplyr")
library("ggplot2")
library("viridis")
library("plotly")
library("corrplot")
library("PerformanceAnalytics")
repasseAno <- read.csv(file = "../../data/repasse_ano.csv")
repasseAno$DATA <- as.Date(repasseAno$DATA);
repasseAno <- na.omit(repasseAno)
repasseAno <-repasseAno[order(repasseAno$DATA, decreasing = TRUE),]
repasse <- repasseAno$VALOR
repasse_anterior <- lead(repasse,n=1L)
data_analise <- data.frame(repasse)
data_analise$repasse_anterior <- repasse_anterior
#exclui NA
data_analise <- na.omit(data_analise)
x <- data_analise[,2]
y <- data_analise[,1]
X <- matrix(x, nrow = 23)
Y <- matrix(y, nrow = 23)
Yscaled <- scale(Y)
Xscaled <- scale(X)
Y <- Yscaled
X <- Xscaled
Y
Yscaled * attr(Yscaled, 'scaled:scale') + attr(Yscaled, 'scaled:center')
y
test <- scale(x)
library("rnn")
library("dplyr")
library("ggplot2")
library("viridis")
library("plotly")
library("corrplot")
library("PerformanceAnalytics")
repasseAno <- read.csv(file = "../../data/repasse_ano.csv")
repasseAno$DATA <- as.Date(repasseAno$DATA);
repasseAno <- na.omit(repasseAno)
repasseAno <-repasseAno[order(repasseAno$DATA, decreasing = TRUE),]
repasse <- repasseAno$VALOR
repasse_anterior <- lead(repasse,n=1L)
data_analise <- data.frame(repasse)
data_analise$repasse_anterior <- repasse_anterior
#exclui NA
data_analise <- na.omit(data_analise)
x <- data_analise[,2]
y <- data_analise[,1]
test <- scale(x)
t1 <- test * attr(test, 'scaled:scale') + attr(test, 'scaled:center')
t1
x
x <- c(1:100)
x
matrix(x, nrow = 10)
##################################################################################
#                 INSTALAÇÃO E CARREGAMENTO DE PACOTES NECESSÁRIOS               #
##################################################################################
#Pacotes utilizados
pacotes <- c("plotly","tidyverse","ggrepel","fastDummies","knitr","kableExtra",
"splines","reshape2","PerformanceAnalytics","metan","correlation",
"see","ggraph","nortest","rgl","car","olsrr","jtools","ggstance",
"magick","cowplot","beepr","Rcpp")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
idade = c(24, 48, 32, 65, 38, 56, 74, 19, 29, 22)
peso = c(80, 67, 49, 55, 89, 72, 45, 88, 56, 74)
altura = c(180, 165, 162, 175, 172, 165, 168, 185, 172, 168)
sexo = c('M','F','M','F','M','F','M','F','M','F')
tabela = data.frame(altura, sexo, idade, peso)
tabela %>% dplyr::group_by(sexo)
tabela %>% dplyr::group_by(sexo) %>%
dplyr::mutate(mean(idade))
tabela %>% dplyr::group_by(sexo) %>%
dplyr::transmute(mean(idade))
test <- tabela %>% dplyr::group_by(sexo) %>%
dplyr::transmute(mean(idade))
View(test)
test <- tabela %>% dplyr::group_by(sexo) %>%
dplyr::summarise(mean(idade))
View(test)
ideb_repasse <- read.csv(file = "../../data/ideb_repasse/ideb_repasse.csv")
ideb_repasse[is.na(ideb_repasse) == TRUE]
View(ideb_repasse)
ideb_repasse <- na.omit(ideb_repasse)
ideb_repasse[is.na(ideb_repasse) == TRUE]
ideb_repasse <- read.csv(file = "../../data/ideb_repasse/ideb_repasse.csv")
ideb_repasse[is.na(ideb_repasse) == TRUE]
ideb_repasse[is.na(ideb_repasse) == TRUE]
ideb_repasse <- na.omit(ideb_repasse)
ideb_repasse <- na.omit(ideb_repasse)
ideb_repasse[is.na(ideb_repasse) == TRUE]
ideb_repasse <- na.omit(ideb_repasse)
---
title: "01_tratamento_dados.Rmd"
author: "pedro-hos@outlook.com"
date: "5/3/2022"
output: html_document
---
### Carregando Dados do CSV
```{r}
ideb_repasse <- read.csv(file = "../../data/ideb_repasse/ideb_repasse.csv")
```
### Removendo NAs
```{r}
ideb_repasse[is.na(ideb_repasse) == TRUE]
ideb_repasse <- na.omit(ideb_repasse)
```
```{r}
tabela %>% dplyr::group_by(sexo) %>%
dplyr::summarise(mean(idade))
```
View(ideb_repasse)
test <- tabela %>% dplyr::group_by(sexo && altura <= 180) %>%
dplyr::summarise(mean(idade))
test <- tabela %>% dplyr::group_by(sexo & altura <= 180) %>%
dplyr::summarise(mean(idade))
idade = c(24, 48, 32, 65, 38, 56, 74, 19, 29, 22)
peso = c(80, 67, 49, 55, 89, 72, 45, 88, 56, 74)
altura = c(180, 165, 162, 175, 172, 165, 168, 185, 172, 168)
sexo = c('M','F','M','F','M','F','M','F','M','F')
tabela = data.frame(altura, sexo, idade, peso)
test <- tabela %>% dplyr::group_by(sexo & altura <= 180) %>%
dplyr::summarise(mean(idade))
idade = c(24, 48, 32, 65, 38, 56, 74, 19, 29, 22)
peso = c(80, 67, 49, 55, 89, 72, 45, 88, 56, 74)
altura = c(180, 165, 162, 175, 172, 165, 168, 185, 172, 168)
sexo = c('M','F','M','F','M','F','M','F','M','F')
tabela = data.frame(altura, sexo, idade, peso)
test <- tabela %>% dplyr::group_by(sexo && altura <= 180) %>%
dplyr::summarise(mean(idade))
test <- tabela %>% dplyr::group_by(sexo && altura <= 180) %>%
dplyr::summarise(mean(idade))
test <- tabela %>% dplyr::group_by(sexo, altura <= 180) %>%
dplyr::summarise(mean(idade))
idade = c(24, 48, 32, 65, 38, 56, 74, 19, 29, 22)
peso = c(80, 67, 49, 55, 89, 72, 45, 88, 56, 74)
altura = c(180, 165, 162, 175, 172, 165, 168, 185, 172, 168)
sexo = c('M','F','M','F','M','F','M','F','M','F')
tabela = data.frame(altura, sexo, idade, peso)
test <- tabela %>% dplyr::group_by(sexo, altura <= 180) %>%
dplyr::summarise(mean(idade))
tabela %>% dplyr::group_by(sexo, altura <= 180)
ideb_repasse <- read.csv(file = "../../data/ideb_repasse/ideb_repasse.csv")
ideb_repasse[is.na(ideb_repasse) == TRUE]
ideb_repasse <- na.omit(ideb_repasse)
View(ideb_repasse)
save((ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_INICIAIS" & IDH_EDUCACAO > 0)), file = "../../data/ideb_repasse/anos_iniciais.RData")
ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_INICIAIS" & IDH_EDUCACAO > 0)
anos_iniciais <- ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_INICIAIS" & IDH_EDUCACAO > 0)
View(anos_iniciais)
anos_finais <- ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_FINAIS" & IDH_EDUCACAO > 0)
anos_ensino_medio <- ideb_repasse %>% dplyr::filter(PERIODO=="ENSINO_MEDIO" & IDH_EDUCACAO > 0)
View(anos_ensino_medio)
save(anos_iniciais, file = "../../data/ideb_repasse/anos_iniciais.RData")
ideb_repasse <- read.csv(file = "../../data/ideb_repasse/ideb_repasse.csv")
ideb_repasse <- na.omit(ideb_repasse)
View(ideb_repasse)
ideb_repasse$ANO_IDEB = as.Date(ideb_repasse$ANO_IDEB)
ideb_repasse$ANO_IDH = as.Date(ideb_repasse$ANO_IDH)
ideb_repasse$ANO_REPASSE = as.Date(ideb_repasse$ANO_REPASSE)
anos_iniciais <- ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_INICIAIS" & IDH_EDUCACAO > 0)
anos_finais <- ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_FINAIS" & IDH_EDUCACAO > 0)
ensino_medio <- ideb_repasse %>% dplyr::filter(PERIODO=="ENSINO_MEDIO" & IDH_EDUCACAO > 0)
save(anos_iniciais, file = "../../data/ideb_repasse/anos_iniciais.RData")
save(anos_finais, file = "../../data/ideb_repasse/anos_finais.RData")
save(ensino_medio, file = "../../data/ideb_repasse/ensino_medio.RData")
load("../../data/ideb_repasse/anos_iniciais.RData")
View(anos_iniciais)
summary(anos_iniciais)
ideb_repasse <- read.csv(file = "../../data/ideb_repasse/ideb_repasse.csv")
#ideb_repasse[is.na(ideb_repasse) == TRUE]
ideb_repasse <- na.omit(ideb_repasse)
ideb_repasse$ANO_IDEB = as.Date(as.character(ideb_repasse$ANO_IDEB), format="%Y")
ideb_repasse$ANO_IDH = as.Date(as.character(ideb_repasse$ANO_IDH), format="%Y")
ideb_repasse$ANO_REPASSE = as.Date(as.character(ideb_repasse$ANO_REPASSE), format="%Y")
summary(ideb_repasse)
View(ideb_repasse)
ideb_repasse <- read.csv(file = "../../data/ideb_repasse/ideb_repasse.csv")
#ideb_repasse[is.na(ideb_repasse) == TRUE]
ideb_repasse <- na.omit(ideb_repasse)
summary(ideb_repasse)
glimpse(ideb_repasse)
?as_label
ideb_repasse$ANO_IDEB = as.factor(ideb_repasse$ANO_IDEB)
glimpse(ideb_repasse)
summary(ideb_repasse)
ideb_repasse$ANO_IDEB = as.factor(ideb_repasse$ANO_IDEB)
ideb_repasse$ANO_IDH = as.factor(ideb_repasse$ANO_IDH)
ideb_repasse$ANO_REPASSE = as.factor(ideb_repasse$ANO_REPASSE)
anos_iniciais <- ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_INICIAIS" & IDH_EDUCACAO > 0)
anos_finais <- ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_FINAIS" & IDH_EDUCACAO > 0)
ensino_medio <- ideb_repasse %>% dplyr::filter(PERIODO=="ENSINO_MEDIO" & IDH_EDUCACAO > 0)
save(anos_iniciais, file = "../../data/ideb_repasse/anos_iniciais.RData")
save(anos_finais, file = "../../data/ideb_repasse/anos_finais.RData")
save(ensino_medio, file = "../../data/ideb_repasse/ensino_medio.RData")
load("../../data/ideb_repasse/anos_iniciais.RData")
load("../../data/ideb_repasse/anos_iniciais.RData")
summary(anos_iniciais)
View(anos_iniciais)
ideb_repasse <- read.csv(file = "../../data/ideb_repasse/ideb_repasse.csv")
#ideb_repasse[is.na(ideb_repasse) == TRUE]
ideb_repasse <- na.omit(ideb_repasse)
ideb_repasse$ANO_IDEB = as.factor(ideb_repasse$ANO_IDEB)
ideb_repasse$ANO_IDH = as.factor(ideb_repasse$ANO_IDH)
ideb_repasse$ANO_REPASSE = as.factor(ideb_repasse$ANO_REPASSE)
ideb_repasse$PERIODO = as.factor(ideb_repasse$PERIODO)
ideb_repasse$UF = as.factor(ideb_repasse$UF)
ideb_repasse$MUNICIPIO = as.factor(ideb_repasse$MUNICIPIO)
ideb_repasse$REDE = as.factor(ideb_repasse$REDE)
anos_iniciais <- ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_INICIAIS" & IDH_EDUCACAO > 0)
anos_finais <- ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_FINAIS" & IDH_EDUCACAO > 0)
ensino_medio <- ideb_repasse %>% dplyr::filter(PERIODO=="ENSINO_MEDIO" & IDH_EDUCACAO > 0)
save(anos_iniciais, file = "../../data/ideb_repasse/anos_iniciais.RData")
save(anos_finais, file = "../../data/ideb_repasse/anos_finais.RData")
save(ensino_medio, file = "../../data/ideb_repasse/ensino_medio.RData")
load("../../data/ideb_repasse/anos_iniciais.RData")
summary(anos_iniciais)
3.764e+04
---
title: "01_tratamento_dados.Rmd"
author: "pedro-hos@outlook.com"
date: "5/3/2022"
output: html_document
---
### Carregando Dados do CSV
```{r}
ideb_repasse <- read.csv(file = "../../data/ideb_repasse/ideb_repasse.csv")
```
### Removendo NAs
```{r}
#ideb_repasse[is.na(ideb_repasse) == TRUE]
ideb_repasse <- na.omit(ideb_repasse)
```
### Convertendo para factor
```{r}
ideb_repasse$ANO_IDEB = as.factor(ideb_repasse$ANO_IDEB)
ideb_repasse$ANO_IDH = as.factor(ideb_repasse$ANO_IDH)
ideb_repasse$ANO_REPASSE = as.factor(ideb_repasse$ANO_REPASSE)
ideb_repasse$PERIODO = as.factor(ideb_repasse$PERIODO)
ideb_repasse$UF = as.factor(ideb_repasse$UF)
ideb_repasse$MUNICIPIO = as.factor(ideb_repasse$MUNICIPIO)
ideb_repasse$REDE = as.factor(ideb_repasse$REDE)
```
### Separando os dados por Periodo
```{r}
anos_iniciais <- ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_INICIAIS" & IDH_EDUCACAO > 0)
anos_finais <- ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_FINAIS" & IDH_EDUCACAO > 0)
ensino_medio <- ideb_repasse %>% dplyr::filter(PERIODO=="ENSINO_MEDIO" & IDH_EDUCACAO > 0)
```
### Salvando em u RData
```{r}
ideb_repasse  %>%  save(file = "../../data/ideb_repasse/todos_anos.RData")
anos_iniciais %>%  save(file = "../../data/ideb_repasse/anos_iniciais.RData")
anos_finais   %>%  save(file = "../../data/ideb_repasse/anos_finais.RData")
ensino_medio  %>%  save(file = "../../data/ideb_repasse/ensino_medio.RData")
```
ideb_repasse <- read.csv(file = "../../data/ideb_repasse/ideb_repasse.csv")
ideb_repasse <- read.csv(file = "../../data/ideb_repasse/ideb_repasse.csv")
ideb_repasse <- read.csv(file = "../../data/ideb_repasse/ideb_repasse.csv")
#ideb_repasse[is.na(ideb_repasse) == TRUE]
ideb_repasse <- na.omit(ideb_repasse)
ideb_repasse$ANO_IDEB = as.factor(ideb_repasse$ANO_IDEB)
ideb_repasse$ANO_IDH = as.factor(ideb_repasse$ANO_IDH)
ideb_repasse$ANO_REPASSE = as.factor(ideb_repasse$ANO_REPASSE)
ideb_repasse$PERIODO = as.factor(ideb_repasse$PERIODO)
ideb_repasse$UF = as.factor(ideb_repasse$UF)
ideb_repasse$MUNICIPIO = as.factor(ideb_repasse$MUNICIPIO)
ideb_repasse$REDE = as.factor(ideb_repasse$REDE)
anos_iniciais <- ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_INICIAIS" & IDH_EDUCACAO > 0)
anos_finais <- ideb_repasse %>% dplyr::filter(PERIODO=="FUNDAMENTAL_ANOS_FINAIS" & IDH_EDUCACAO > 0)
ensino_medio <- ideb_repasse %>% dplyr::filter(PERIODO=="ENSINO_MEDIO" & IDH_EDUCACAO > 0)
ideb_repasse  %>%  save(file = "../../data/ideb_repasse/todos_anos.RData")
anos_iniciais %>%  save(file = "../../data/ideb_repasse/anos_iniciais.RData")
anos_finais   %>%  save(file = "../../data/ideb_repasse/anos_finais.RData")
ensino_medio  %>%  save(file = "../../data/ideb_repasse/ensino_medio.RData")
load("../../data/ideb_repasse/anos_iniciais.RData")
load("../../data/ideb_repasse/anos_iniciais.RData")
glimpse(anos_iniciais)
load("../../data/ideb_repasse/anos_iniciais.RData")
load("../../data/ideb_repasse/anos_iniciais.RData")
load("../../data/ideb_repasse/anos_iniciais.RData")
load("../../data/ideb_repasse/anos_iniciais.RData")
load("~/workspace/code/pessoal/repasse-analises/data/ideb_repasse/anos_iniciais.RData")
load("../../data/ideb_repasse/anos_iniciais.RData")
load("../../data/ideb_repasse/anos_iniciais.RData")
glimpse(anos_iniciais)
load("../../data/ideb_repasse/anos_iniciais.RData")
